###题目要求
'''
Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.

Example 1:
Input: [1,4,3,2]

Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).
Note:
n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].
'''
##给定长度为 2n 的数组, 你的任务是将这些数分成 n 对, 例如 (a1, b1), (a2, b2), ..., (an, bn) ，使得从1 到 n 的 min(ai, bi) 总和最大。
##思路：对列表进行从小到大排序，然后求列表中奇数之和（下标为偶数的元素之和）
##自己的答案
class Solution:
    def arrayPairSum(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        sort_nums = sorted(nums)
        i = 0
        max = 0
        while i < len(sort_nums):
            max += sort_nums[i]
            i += 2
        return max
###大神的答案
#运用splice切片，偶数步对应元素之和，内部函数sum()
class Solution(object):  
  
    def arrayPairSum(self, nums):  
        """ 
        :type nums: List[int] 
        :rtype: int 
        """  
        return sum(sorted(nums)[::2])  
